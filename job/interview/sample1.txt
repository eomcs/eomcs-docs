~면접질문 모음~

(업체1; SI업체)

1. 기본 클래스를 만든 뒤 메소드를 호출하여 "Hello world"를 출력하라(단, return type은 없는것으로 한다) // 손코딩으로 푸는 문제였습니다
class A {
  public static void main(String[] args) {
    A obj = new A();
    obj.hello();
  }

  private void hello() {
    System.out.println("Hello world!");
  }
}
2. DI란 무엇인가?
- Dependency Injection의 약자로서 의존성 주입이라 부릅니다.
- IoC(Inversion of Control)의 한 예입니다.
- 제어의 역행이라 하는데, 의존 객체, 즉 자기가 사용할 객체를 직접 만드는 것이 아니라 외부로부터 주입 받는 것을 말합니다.
- 보통 의존 객체를 관리하는 IoC 컨테이너가 있고, 그 컨테이너를 통해 의존 객체를 주입 받습니다.
- 제가 교육과정에서 사용했던 IoC 컨테이너는 Spring IoC 컨테이너였습니다.

3. DI를 사용했을때의 장점을 서술해보시오
- 의존 객체를 외부에서 주입받기 때문에 대체하기가 쉽다.
- 그래서 의존 객체를 사용할 때 보통 인터페이스로 정의합니다.
- 즉 인터페이스의 구현체라면 어떤 객체든지 주입받을 수 있기 때문에 특정 클래스에 고정되지 않습니다.
- 특히 단위 테스트를 할 때 의존 객체를 목업(mockup) 클래스로 작성하여 주입함으로써 
  테스트 하는 것을 도와줍니다. 

4. 
학생 table - [학번] [이름]
학점 table - [학번] [점수]

위 테이블을 이용하여 '홍길동' 학생의 학번, 이름, 점수를 출력하시오 // SQL join 문제

select s.학번, s.이름, c.점수
from 학생 s 
  left outer join 학점 c on s.학번 = c.학번

5. 
select rownum as rnum, A.id, A.name, A.content,
from (
    select id, name, content
    from board
    order by regdate desc ) A
where rownum [**]

위의 쿼리문은 페이징을 처리하기 위한 쿼리문이다.
1페이지부터 10페이지까지의 데이터를 가져오고 싶다고 할 경우, [**]에 무엇이 들어가야 하는가?

// 이 테스트는 지원자가 맞추기를 바라고 낸 문제라기 보다는 실무에선 이렇게 쓴다~ 라는걸 알려주기 위한 코드였다고 합니다

6. 프로젝트 관련 질문
    6.1. header와 footer는 매 페이지마다 동일하게 구현하여 따라가는 것인데 어떤 방식으로 사용했는지? (includ 방식을 사용했다고 답)
    6.2. include방식을 사용했다고 했는데, spring에 tiles라는 기능이 있는데 사용하지 않은 이유?
  => 교육시간 상 기본 뷰 템플릿 엔진으로 JSP를 배웠습니다.
    6.3. sns로그인은 어떤 방식으로 했는지?
  Facebook JavaScript API를 사용하여 처리했습니다.

(업체2; 솔루션 회사)

1. 회사 지원 동기
=> 면접 보기 전에 회사 홈페이지에 방문하여 회사의 주요 업무를 파악하라.
=> 준비성에 대한 태도를 확인한다.

2. 지방근무 가능 여부
=> ?

3. 야근 가능 여부
=> ?

4. 커뮤니케이션을 위한 본인만의 팁이 있다면 서술하시오
=> ?

5. os에 대해 아는대로 쓰시오
=> 

6. 리눅스 명령어 중 현재 전체 프로세스를 나타내는 명령어와 파라미터를 쓰시오
=> ps -el

7. 리눅스 명령어 중 start.sh를 활성화 시키는 명령어를 쓰시오
=> chmod 755 start.sh

8. 웹 서버의 기본 포트번호를 쓰시오
=> HTTP : 80 (기본)
=> HTTPS : 443 (기본)
=> 8080 (프록시)

9.
학생 table - [학번] [이름] [학점]
위의 테이블을 이용하여 학생 테이블의 학점의 평균을 구하는 sql문을 쓰시오
select avg(학점)
from 학생

10. 학생 테이블 중 '홍길동'학생의 모든 정보를 리턴하는 sql문을 쓰시오
select *
from 학생
where 이름='홍길동'

11. 구구단 프로그래밍을 작성하시오(언어 무관) //손코딩
class Gugudan {
  public static void main(String[] args) {
    for (int i = 1; i <= 9; i++) {
      for (int j = 1; j <= 9; j++) {
        System.out.printf("%d * %d = %d\n", i, j, i * j);
      }
    }
  }
}


(업체3; 스타트업, 구두면접)

1. access token & refresh token의 차이점? + access token을 사용하여 sns로그인을 했을 경우 흐름을 그려보아라
=>

2. servlet랑 jsp의 차이점 및 각각의 개념
=> Servlet과 JSP 모두 서블릿 컨테이너가 관리하는 객체이다.
=> HTTP 클라이언트의 요청이 들어 왔을 때 Servlet 인터페이스의 정의된 규칙에 따라 
   서블릿 컨테이너가 Servlet과 JSP의 메서드를 호출합니다.
=> JSP는 HTML을 생성하기 쉽게 도와주는 템플릿 엔진입니다.
   JSP 엔진은 JSP를 가지고 서블릿 객체를 생성합니다.
   따라서 결국 JSP도 서블릿입니다.
=> 단 기존의 서블릿과의 차이점은 JSP로 출력 콘텐트를 작성하기 쉽습니다.
   즉 서블릿은 출력할 때 마다 print()와 같은 메서드를 호출해야 한다면
   JSP는 템플릿 데이터를 가지고  자동으로 print()와 같은 자바 출력문을 자동 생성합니다.

3. DI 개념과 DI를 쓰는 이유? + 스프링에서는 어디에 쓰이는가?

4. MVC & MVC2모델 구조 및 차이점
MVC 모델 1: 
  JSP(컨트롤러 + 뷰) ---> Service(모델) ---> DAO(모델)
MVC 모델 2:
  Servlet(컨트롤러) ----> Service(모델) ---> DAO(모델) 
     |
     v
    JSP(뷰)

5. mybatis를 썼는데 썼을 때의 장점 + 썼던 이유?
=> JDBC API를 직접 사용할 때는 자바 소스 파일에 SQL문이 포함되어 있어 복잡하였습니다.
=> Mybatis(iBatis)에서는 자바 소스 파일에서 SQL을 별도의 XML 파일에 분리하기 때문에 
   소스 코드가 덜 복잡합니다.
   또한 JDBC API를 사용하는 부분을 '캡슐화' 했기 때문에 JDBC API를 직접 사용하기 않고 
   DB의 데이터를 제어할 수 있어 코드가 간결합니다.
   특히 DAO를 자동 생성하는 기능을 이용하면,
   구체적으로 클래스를 작성할 필요가 없이 인터페이스만 정의하면 되기 때문에 
   소스 코드를 더 간결하게 유지할 수 있습니다.

+ 그 외 프로젝트 관련 질문들










